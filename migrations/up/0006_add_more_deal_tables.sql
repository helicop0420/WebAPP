-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.


CREATE TABLE IF NOT EXISTS public.deal_comments
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    user_id uuid NOT NULL,
    comment text COLLATE pg_catalog."default" NOT NULL,
    replying_to_comment_id bigint,
    CONSTRAINT deal_comments_pkey PRIMARY KEY (id),
    CONSTRAINT deal_comments_replying_to_comment_id_key UNIQUE (replying_to_comment_id),
    CONSTRAINT deal_comments_replying_to_comment_id_fkey FOREIGN KEY (replying_to_comment_id)
        REFERENCES public.deal_comments (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_comments_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_comments
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_comments TO anon;

GRANT ALL ON TABLE public.deal_comments TO authenticated;

GRANT ALL ON TABLE public.deal_comments TO postgres;

GRANT ALL ON TABLE public.deal_comments TO service_role;

GRANT ALL ON TABLE public.deal_comments TO supabase_admin;

COMMENT ON COLUMN public.deal_comments.replying_to_comment_id
    IS 'can only have one reply per comment';

CREATE TABLE IF NOT EXISTS public.deal_to_sponsor_associations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    sponsor_id uuid NOT NULL,
    order_index bigint,
    CONSTRAINT deal_to_sponsor_associations_pkey PRIMARY KEY (id),
    CONSTRAINT deal_to_sponsor_associations_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_to_sponsor_associations_sponsor_id_fkey FOREIGN KEY (sponsor_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_to_sponsor_associations
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_to_sponsor_associations TO anon;

GRANT ALL ON TABLE public.deal_to_sponsor_associations TO authenticated;

GRANT ALL ON TABLE public.deal_to_sponsor_associations TO postgres;

GRANT ALL ON TABLE public.deal_to_sponsor_associations TO service_role;

GRANT ALL ON TABLE public.deal_to_sponsor_associations TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.deal_comment_likes
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    user_id uuid NOT NULL,
    deal_comment_id bigint NOT NULL,
    CONSTRAINT deal_comment_likes_pkey PRIMARY KEY (id),
    CONSTRAINT deal_comment_likes_deal_comment_id_fkey FOREIGN KEY (deal_comment_id)
        REFERENCES public.deal_comments (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_comment_likes_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_comment_likes
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_comment_likes TO anon;

GRANT ALL ON TABLE public.deal_comment_likes TO authenticated;

GRANT ALL ON TABLE public.deal_comment_likes TO postgres;

GRANT ALL ON TABLE public.deal_comment_likes TO service_role;

GRANT ALL ON TABLE public.deal_comment_likes TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.deal_images
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    image_url text COLLATE pg_catalog."default" NOT NULL,
    order_index bigint,
    CONSTRAINT deal_images_pkey PRIMARY KEY (id),
    CONSTRAINT deal_images_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_images
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_images TO anon;

GRANT ALL ON TABLE public.deal_images TO authenticated;

GRANT ALL ON TABLE public.deal_images TO postgres;

GRANT ALL ON TABLE public.deal_images TO service_role;

GRANT ALL ON TABLE public.deal_images TO supabase_admin;

CREATE TABLE IF NOT EXISTS public.deal_interest
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    user_id uuid NOT NULL,
    CONSTRAINT deal_interest_pkey PRIMARY KEY (id),
    CONSTRAINT deal_interest_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_interest_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_interest
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_interest TO anon;

GRANT ALL ON TABLE public.deal_interest TO authenticated;

GRANT ALL ON TABLE public.deal_interest TO postgres;

GRANT ALL ON TABLE public.deal_interest TO service_role;

GRANT ALL ON TABLE public.deal_interest TO supabase_admin;

ALTER TABLE IF EXISTS public.deals
    ADD COLUMN is_active boolean NOT NULL DEFAULT true;
