-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.


-- Changing the columns in a view requires dropping and re-creating the view.
-- This may fail if other objects are dependent upon this view,
-- or may cause procedural functions to fail if they are not modified to
-- take account of the changes.
DROP VIEW public.profile_page_view;
CREATE OR REPLACE VIEW public.profile_page_view
    AS
     SELECT user_profile.user_id,
    user_profile.profile_pic_url,
    user_profile.name,
    user_profile.is_verified,
    user_profile.subtitle,
    user_profile.is_sponsor,
    user_profile.is_investor,
    user_profile.current_org_id,
    user_profile.current_org_position,
    org.profile_pic_url AS current_org_profile_pic_url,
    org.name AS current_org_name,
    user_profile.created_at,
    user_profile.nominated_by_user_id,
    nominated_by_user_profile.profile_pic_url AS nominated_by_user_profile_pic_url,
    nominated_by_user_profile.name AS nominated_by_user_name,
    ( SELECT count(*) AS count
           FROM friends_list_view friend
          WHERE friend.from_user_id = user_profile.user_id) AS number_of_connections,
    ( SELECT to_json(mutual_connections.*) AS to_json
           FROM ( SELECT your_friend.to_user_id,
                    your_friend.profile_pic_url,
                    your_friend.name,
                    their_friend.is_in_work_family AS is_in_their_work_family
                   FROM friends_list_view their_friend
                     JOIN friends_list_view your_friend ON their_friend.to_user_id = your_friend.to_user_id
                  WHERE their_friend.from_user_id = user_profile.user_id AND your_friend.from_user_id = auth.uid()) mutual_connections) AS mutual_connections,
    ( SELECT count(*) AS count
           FROM friends_list_view friend
          WHERE friend.from_user_id = user_profile.user_id AND friend.is_in_work_family = true) AS number_of_work_family_connections,
    user_profile.linkedin_url,
    user_profile.facebook_url,
    user_profile.instagram_url,
    user_profile.twitter_url,
    ( SELECT to_json(projects.*) AS to_json
           FROM ( SELECT deal.title,
                    deal.about,
                    deal.is_active,
                    ( SELECT deal_image.image_url
                           FROM deal_images deal_image
                          WHERE deal.id = deal_image.deal_id
                          ORDER BY deal_image.order_index, deal_image.created_at
                         LIMIT 1) AS deal_image,
                    ( SELECT count(*) AS count
                           FROM deal_interest
                          WHERE deal_interest.deal_id = deal.id) AS deal_interest_count
                   FROM deal_to_sponsor_associations dtsa
                     JOIN deals deal ON dtsa.deal_id = deal.id
                  WHERE dtsa.sponsor_id = user_profile.user_id) projects) AS projects,
    ( SELECT to_json(endorsements.*) AS to_json
           FROM ( SELECT endorsing_user.profile_pic_url AS endorsing_user_profile_pic_url,
                    endorsing_user.name AS endorsing_user_name,
                    endorsement.created_at,
                    endorsement.subtitle,
                    endorsement.text
                   FROM endorsements endorsement
                     JOIN user_profiles endorsing_user ON endorsement.author_user_id = endorsing_user.user_id
                  WHERE endorsement.to_user_id = user_profile.user_id) endorsements) AS endorsements
   FROM user_profiles user_profile
     JOIN organizations org ON user_profile.current_org_id = org.id
     JOIN user_profiles nominated_by_user_profile ON user_profile.nominated_by_user_id = nominated_by_user_profile.user_id;
GRANT ALL ON TABLE public.profile_page_view TO anon;
GRANT ALL ON TABLE public.profile_page_view TO postgres;
GRANT ALL ON TABLE public.profile_page_view TO supabase_admin;
GRANT ALL ON TABLE public.profile_page_view TO authenticated;
GRANT ALL ON TABLE public.profile_page_view TO service_role;

