-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.


ALTER TABLE IF EXISTS public.deal_comments
    ADD COLUMN likes_count bigint DEFAULT '0'::bigint;


CREATE OR REPLACE FUNCTION public.set_deal_comment_likes_count()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF SECURITY DEFINER
    SET search_path=public
AS $BODY$
begin
  -- NEW = deal_comment_like, we need to update the deal_comment row
  update deal_comments
  set 
    likes_count = (
      select count(*)
      from deal_comment_likes
      where deal_comment_id = NEW.deal_comment_id
    )
  WHERE 
    id = NEW.deal_comment_id;

  return new;
end;
$BODY$;

ALTER FUNCTION public.set_deal_comment_likes_count()
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO anon;
GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO postgres;
GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO supabase_admin;
GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO authenticated;
GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO PUBLIC;
GRANT EXECUTE ON FUNCTION public.set_deal_comment_likes_count() TO service_role;


CREATE TRIGGER deal_comments_set_likes_count
    AFTER INSERT OR DELETE OR UPDATE 
    ON public.deal_comment_likes
    FOR EACH ROW
    EXECUTE FUNCTION public.set_deal_comment_likes_count();

drop view public.deal_page_view;
CREATE OR REPLACE VIEW public.deal_page_view
    AS
     SELECT deal.id,
    deal.title,
    deal.highlight_1_name,
    deal.highlight_1_value,
    deal.highlight_2_name,
    deal.highlight_2_value,
    deal.highlight_3_name,
    deal.highlight_3_value,
    deal.highlight_4_name,
    deal.highlight_4_value,
    deal.about,
    ( SELECT json_agg(cur_deal_images.*) AS json_agg
           FROM ( SELECT deal_image.id,
                    deal_image.created_at,
                    deal_image.updated_at,
                    deal_image.deal_id,
                    deal_image.image_url,
                    deal_image.order_index
                   FROM deal_images deal_image
                  WHERE deal_image.deal_id = deal.id) cur_deal_images) AS deal_images,
    deal.interest_count,
    ( SELECT json_agg(cur_deal_interests.*) AS json_agg
           FROM ( SELECT deal_interest.id,
                    deal_interest.created_at,
                    deal_interest.updated_at,
                    deal_interest.deal_id,
                    deal_interest.user_id
                   FROM deal_interest
                  WHERE deal_interest.deal_id = deal.id) cur_deal_interests) AS connections_deal_interest,
    ( SELECT json_agg(all_comments.*) AS json_agg
           FROM ( SELECT deal_comments.id,
                    deal_comments.created_at,
                    deal_comments.updated_at,
                    deal_comments.user_id,
                    deal_comments.comment,
                    deal_comments.replying_to_comment_id,
                    deal_comments.deal_id,
                    deal_comments.type,
                    deal_comments.likes_count,
                    ( SELECT json_agg(comment_likes.*) AS json_agg
                           FROM ( SELECT deal_comment_likes.id,
                                    deal_comment_likes.created_at,
                                    deal_comment_likes.updated_at,
                                    deal_comment_likes.user_id,
                                    deal_comment_likes.deal_comment_id
                                   FROM deal_comment_likes
                                  WHERE deal_comment_likes.deal_comment_id = deal_comments.id) comment_likes) AS likes
                   FROM deal_comments
                  WHERE deal_comments.deal_id = deal.id) all_comments) AS deal_comments,
    ( SELECT json_agg(sponsors.*) AS json_agg
           FROM ( SELECT sponsor.first_name,
                    sponsor.last_name,
                    sponsor.handle,
                    sponsor.subtitle,
                    sponsor.profile_pic_url,
                    sponsor_projects_view.deals,
                    mutual_connections_view.mutual_connections
                   FROM deal_to_sponsor_associations
                     JOIN sponsor_projects_view ON sponsor_projects_view.user_id = deal_to_sponsor_associations.sponsor_id
                     JOIN mutual_connections_view ON mutual_connections_view.user_id = deal_to_sponsor_associations.sponsor_id
                     JOIN user_profiles sponsor ON deal_to_sponsor_associations.sponsor_id = sponsor.user_id
                  WHERE deal_to_sponsor_associations.deal_id = deal.id) sponsors) AS deal_sponsors
   FROM deals deal;

GRANT ALL ON TABLE public.profile_page_view TO postgres;

