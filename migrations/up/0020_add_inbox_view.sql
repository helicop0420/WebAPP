-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

ALTER TABLE IF EXISTS public.message_read_receipts
    ADD COLUMN message_id bigint NOT NULL;

ALTER TABLE IF EXISTS public.message_read_receipts
    ADD CONSTRAINT message_read_receipts_message_id_fkey FOREIGN KEY (message_id)
    REFERENCES public.messages (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

CREATE OR REPLACE VIEW public.inbox_page_view
 AS
 SELECT conv.id AS conversation_id,
    conv.is_marked_done,
    conv.title,
    conv.updated_at,
    user_profile.user_id,
    ( SELECT json_agg(chat_users.*) AS json_agg
           FROM ( SELECT other_user.user_id,
                    other_user.profile_pic_url,
                    other_user.handle,
                    other_user.subtitle,
                    other_user.first_name,
                    other_user.last_name
                   FROM conversation_to_user_associations ctua
                     JOIN user_profiles other_user ON ctua.user_id = other_user.user_id
                  WHERE ctua.conversation_id = conv.id AND user_profile.user_id <> other_user.user_id) chat_users) AS users_in_conv,
    latest_message.content AS latest_message_content,
    latest_message.user_id AS latest_message_user_id,
    latest_message.user_handle AS latest_message_user_handle,
    latest_message.user_profile_pic_url AS latest_message_user_profile_pic_url,
    latest_message.created_at AS latest_message_created_at,
    latest_message.read_at_time AS latest_message_read_at_time
   FROM conversations conv
     JOIN conversation_to_user_associations conv_users ON conv_users.conversation_id = conv.id
     JOIN user_profiles user_profile ON conv_users.user_id = user_profile.user_id
     LEFT JOIN ( SELECT message.id,
            message.content,
            message.conversation_id,
            message.created_at,
            message.user_id,
            latest_message_user.handle AS user_handle,
            latest_message_user.profile_pic_url AS user_profile_pic_url,
            read_receipt.created_at AS read_at_time
           FROM ( SELECT DISTINCT ON (message_1.conversation_id) message_1.id,
                    message_1.created_at,
                    message_1.updated_at,
                    message_1.conversation_id,
                    message_1.content,
                    message_1.user_id,
                    message_1.on_deal_id,
                    message_1.nudged_time
                   FROM messages message_1
                  ORDER BY message_1.conversation_id, message_1.created_at DESC) message
             JOIN user_profiles latest_message_user ON message.user_id = latest_message_user.user_id
             LEFT JOIN message_read_receipts read_receipt ON message.id = read_receipt.message_id AND read_receipt.user_id = message.user_id) latest_message ON conv.id = latest_message.conversation_id
  ORDER BY conv.id;

ALTER TABLE public.inbox_page_view
    OWNER TO supabase_admin;

GRANT ALL ON TABLE public.inbox_page_view TO anon;
GRANT ALL ON TABLE public.inbox_page_view TO postgres;
GRANT ALL ON TABLE public.inbox_page_view TO supabase_admin;
GRANT ALL ON TABLE public.inbox_page_view TO authenticated;
GRANT ALL ON TABLE public.inbox_page_view TO service_role;
