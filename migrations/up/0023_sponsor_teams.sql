-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.sponsor_teams
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    leader_user_id uuid NOT NULL,
    CONSTRAINT sponsor_teams_pkey PRIMARY KEY (id),
    CONSTRAINT sponsor_teams_leader_user_id_fkey FOREIGN KEY (leader_user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.sponsor_teams
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.sponsor_teams TO anon;

GRANT ALL ON TABLE public.sponsor_teams TO authenticated;

GRANT ALL ON TABLE public.sponsor_teams TO postgres;

GRANT ALL ON TABLE public.sponsor_teams TO service_role;

GRANT ALL ON TABLE public.sponsor_teams TO supabase_admin;

CREATE TRIGGER sponsor_teams_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.sponsor_teams
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

CREATE TABLE IF NOT EXISTS public.sponsor_team_to_user_associations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    sponsor_team_id bigint NOT NULL,
    user_id uuid NOT NULL,
    order_index bigint NOT NULL,
    CONSTRAINT sponsor_team_to_user_associations_pkey PRIMARY KEY (id),
    CONSTRAINT sponsor_team_to_user_associations_sponsor_team_id_fkey FOREIGN KEY (sponsor_team_id)
        REFERENCES public.sponsor_teams (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT sponsor_team_to_user_associations_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.sponsor_team_to_user_associations
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.sponsor_team_to_user_associations TO anon;

GRANT ALL ON TABLE public.sponsor_team_to_user_associations TO authenticated;

GRANT ALL ON TABLE public.sponsor_team_to_user_associations TO postgres;

GRANT ALL ON TABLE public.sponsor_team_to_user_associations TO service_role;

GRANT ALL ON TABLE public.sponsor_team_to_user_associations TO supabase_admin;

CREATE TRIGGER sponsor_team_to_user_associations_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.sponsor_team_to_user_associations
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

CREATE TABLE IF NOT EXISTS public.deal_to_sponsor_team_associations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    sponsor_team_id bigint NOT NULL,
    CONSTRAINT deal_to_sponsor_team_associations_pkey PRIMARY KEY (id),
    CONSTRAINT deal_to_sponsor_team_associations_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_to_sponsor_team_associations_sponsor_team_id_fkey FOREIGN KEY (sponsor_team_id)
        REFERENCES public.sponsor_teams (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_to_sponsor_team_associations
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_to_sponsor_team_associations TO anon;

GRANT ALL ON TABLE public.deal_to_sponsor_team_associations TO authenticated;

GRANT ALL ON TABLE public.deal_to_sponsor_team_associations TO postgres;

GRANT ALL ON TABLE public.deal_to_sponsor_team_associations TO service_role;

GRANT ALL ON TABLE public.deal_to_sponsor_team_associations TO supabase_admin;

CREATE TRIGGER deal_to_sponsor_team_associations_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.deal_to_sponsor_team_associations
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();


