CREATE TABLE IF NOT EXISTS public.private_notes
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    user_id uuid NOT NULL,
    note text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT private_notes_pkey PRIMARY KEY (id),
    CONSTRAINT private_notes_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT private_notes_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.private_notes
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.private_notes TO anon;

GRANT ALL ON TABLE public.private_notes TO authenticated;

GRANT ALL ON TABLE public.private_notes TO postgres;

GRANT ALL ON TABLE public.private_notes TO service_role;

GRANT ALL ON TABLE public.private_notes TO supabase_admin;

CREATE TRIGGER private_notes_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.private_notes
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

CREATE TABLE IF NOT EXISTS public.deal_views
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    user_id uuid NOT NULL,
    CONSTRAINT deal_views_pkey PRIMARY KEY (id),
    CONSTRAINT deal_views_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_views_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_views
    OWNER to supabase_admin;

GRANT ALL ON TABLE public.deal_views TO anon;

GRANT ALL ON TABLE public.deal_views TO authenticated;

GRANT ALL ON TABLE public.deal_views TO postgres;

GRANT ALL ON TABLE public.deal_views TO service_role;

GRANT ALL ON TABLE public.deal_views TO supabase_admin;

ALTER TABLE IF EXISTS public.user_profiles
    ADD COLUMN cover_photo_url text COLLATE pg_catalog."default";
