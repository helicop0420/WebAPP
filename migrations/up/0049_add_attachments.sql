CREATE TABLE IF NOT EXISTS public.deal_filenames
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_id bigint NOT NULL,
    filename text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT deal_filenames_pkey PRIMARY KEY (id),
    CONSTRAINT deal_filenames_deal_id_fkey FOREIGN KEY (deal_id)
        REFERENCES public.deals (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_filenames
    OWNER to supabase_admin;

ALTER TABLE IF EXISTS public.deal_filenames
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.deal_filenames TO anon;

GRANT ALL ON TABLE public.deal_filenames TO authenticated;

GRANT ALL ON TABLE public.deal_filenames TO postgres;

GRANT ALL ON TABLE public.deal_filenames TO service_role;

GRANT ALL ON TABLE public.deal_filenames TO supabase_admin;

CREATE TRIGGER deal_filenames_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.deal_filenames
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

CREATE TABLE IF NOT EXISTS public.deal_attachments
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_filename_id bigint NOT NULL,
    storage_url text COLLATE pg_catalog."default" NOT NULL,
    attachment_type text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT deal_attachments_pkey PRIMARY KEY (id),
    CONSTRAINT deal_attachments_deal_filename_id_fkey FOREIGN KEY (deal_filename_id)
        REFERENCES public.deal_filenames (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_attachments
    OWNER to supabase_admin;

ALTER TABLE IF EXISTS public.deal_attachments
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.deal_attachments TO anon;

GRANT ALL ON TABLE public.deal_attachments TO authenticated;

GRANT ALL ON TABLE public.deal_attachments TO postgres;

GRANT ALL ON TABLE public.deal_attachments TO service_role;

GRANT ALL ON TABLE public.deal_attachments TO supabase_admin;

CREATE TRIGGER deal_attachments_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.deal_attachments
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

CREATE TABLE IF NOT EXISTS public.deal_filename_user_engagement_stats
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deal_filename_id bigint NOT NULL,
    user_id uuid NOT NULL,
    open_count bigint NOT NULL DEFAULT '0'::bigint,
    CONSTRAINT deal_filename_user_engagement_stats_pkey PRIMARY KEY (id),
    CONSTRAINT deal_filename_user_engagement_stats_deal_filename_id_fkey FOREIGN KEY (deal_filename_id)
        REFERENCES public.deal_filenames (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT deal_filename_user_engagement_stats_user_id_fkey FOREIGN KEY (user_id)
        REFERENCES auth.users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.deal_filename_user_engagement_stats
    OWNER to supabase_admin;

ALTER TABLE IF EXISTS public.deal_filename_user_engagement_stats
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.deal_filename_user_engagement_stats TO anon;

GRANT ALL ON TABLE public.deal_filename_user_engagement_stats TO authenticated;

GRANT ALL ON TABLE public.deal_filename_user_engagement_stats TO postgres;

GRANT ALL ON TABLE public.deal_filename_user_engagement_stats TO service_role;

GRANT ALL ON TABLE public.deal_filename_user_engagement_stats TO supabase_admin;

CREATE TRIGGER deal_filename_user_engagement_stats_set_updated_at
    AFTER INSERT OR UPDATE 
    ON public.deal_filename_user_engagement_stats
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_updated_at();

-- Add the private storage bucket
insert into storage.buckets (id, name, owner, created_at, updated_at, public)
values ('private', 'private', null, '2022-10-28 18:09:33.139552+00', '2022-10-28 18:09:33.139552+00', false);